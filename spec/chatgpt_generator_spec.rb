require 'spec_helper.rb'
require_relative 'ai_rspec_writer_spec.rb'  # or whatever the path to the module file is
require "pry"
RSpec.describe AIRspecWriter::AIProviders::ChatGPTGenerator, type: :model do
  describe '#generate_spec' do
    let(:file_content) { "class SampleClass; end" }
    let(:access_token) { "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" }
    let(:generator) { described_class.new }

    before do
      allow(OpenAI::Client).to receive(:new).and_return(double("Client", chat: response))
    end

    context 'when the API call is successful' do
      let(:successful_response) {
        {
          "choices" => [
            { "message" => { "content" => "rspec describe SampleClass do; end" } }
          ]
        }
      }

      it 'returns test case generated by OpenAI' do
        allow(response).to receive(:dig).and_return("rspec describe SampleClass do; end")
        expect(generator.generate_spec(file_content)).to eq("rspec describe SampleClass do; end")
      end
    end

    context 'when the API call fails' do
      let(:failure_response) {
        { "choices" => [ { "message" => { "content" => nil } } ] }
      }

      it 'returns an error message when the API call is unsuccessful' do
        allow(response).to receive(:dig).and_return(nil)
        expect(generator.generate_spec(file_content)).to eq("Error: Could not generate test cases.")
      end
    end
  end
end